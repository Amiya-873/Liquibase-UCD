<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<plugin xmlns="http://www.urbancode.com/PluginXMLSchema_v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<header>
		<identifier id="com.urbancode.air.plugin.Liquibase" version="1" name="Liquibase"/>
		<description>The Liquibase plugin allows you to automate the use of the Liquibase tool within your deploy processes</description>
		<tag>Database/Liquibase</tag>
	</header>

	<step-type name="GenerateDBDoc">
		<description>Execute Liquibase in dbDoc mode to produce or update database reference documentation.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

			<property name="docOutDir" required="true">
				<property-ui type="textBox" description="Path to directory for output of dbDocs command"/>
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="dbDoc.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="Update">
		<description>Applies given count of change sets is specified. Else updates database to current version.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

			<property name="updateCount" required="false">
				<property-ui type="textBox" description="Number of change sets to be applied." />
			</property>

			<property name="preview" required="false">
				<property-ui type="checkBox" description="If true, update script will be printed but not applied." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="update.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="GenerateChangelog">
		<description>Generates change log of the database.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to be generated." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="generateChangelog.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="Export Data">
		<description>Generates change log of the database.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to be generated." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="exportData.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="ChangelogSync">
		<description>Mark all changes as executed in the database.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="changelogSync.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="Rollback">
		<description>Rolls back change sets.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

			<property name="rollbackType" required="true">
				<property-ui type="selectBox" default-value="count" description="It is possible to rollback to specific date, tag or by given number of changesets."/>
				 	<value label="Number of changesets">count</value>
				 	<value label="to Date">date</value>
				 	<value label="to Tag">tag</value>
			</property>

			<property name="rollbackValue" required="true">
				<property-ui type="textBox" description="Number of changesets/Date ('yyyy-MM-dd'T'HH:mm:ss')/Tag depending on rollback type selected." />
			</property>

			<property name="preview" required="false">
				<property-ui type="checkBox" description="If true, rollback script will be printed but not applied." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="rollback.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="UpdateTestingRollback">
		<description>Updates the database, then rolls back changes before updating again.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="updateTestingRollback.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="Tag">
		<description>"Tags" the current database state for future rollback.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

			<property name="tag" required="true">
				<property-ui type="textBox" description="Tag to use." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="tag.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="Validate">
		<description>Checks the changelog for errors.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="validate.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

	<step-type name="DropAll">
		<description>Drops all database objects owned by the user.</description>
		<properties>

			<property name="command" required="true">
				<property-ui type="textBox" description="Path to liquibase binary." default-value="${p:resource/liquibase.command}"/>
			</property>

			<property name="driver" required="true">
				<property-ui type="textBox" description="Database driver class name." default-value="${p:resource/liquibase.jdbcDriver}"/>
			</property>

			<property name="driverClasspath" required="true">
				<property-ui type="textBox" description="Classpath containing migration files and JDBC Driver." default-value="${p:resource/liquibase.jdbcDriverClasspath}"/>
			</property>

			<property name="jdbcURL" required="true">
				<property-ui type="textBox" description="Database JDBC URL." default-value="${p:resource/liquibase.jdbcURL}"/>
			</property>

			<property name="username" required="true">
				<property-ui type="textBox" description="Database username" default-value="${p:resource/liquibase.dbUser}"/>
			</property>

			<property name="password" required="false">
				<property-ui type="secureBox" description="Password for given username." default-value="${p:resource/liquibase.dbPassword}"/>
			</property>

			<property name="changeLogFile" required="true">
				<property-ui type="textBox" description="The changelog file to use." />
			</property>

		</properties>

		<post-processing>
			if (properties.get("exitCode") != 0) {
				properties.put(new java.lang.String("Status"), new java.lang.String("Failure"));
			}
			else {
				properties.put("Status", "Success");
			}
		</post-processing>
		<command program="${GROOVY_HOME}/bin/groovy">
			<arg value="-cp"/>
			<arg file="classes"/>
			<arg file="dropAll.groovy"/>
			<arg file="${PLUGIN_INPUT_PROPS}"/>
			<arg file="${PLUGIN_OUTPUT_PROPS}"/>
		</command>
	</step-type>

</plugin>
